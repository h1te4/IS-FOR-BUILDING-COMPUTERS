-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public."Блоки_питания"
(
    "id_Компонента" integer NOT NULL,
    "Мощность" integer NOT NULL,
    "Сертификат" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Блоки_питания_pkey" PRIMARY KEY ("id_Компонента")
);

CREATE TABLE IF NOT EXISTS public."Видеокарты"
(
    "id_Компонента" integer NOT NULL,
    "Частота_памяти" numeric(10, 2) NOT NULL,
    "Тип_памяти" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Видеокарты_pkey" PRIMARY KEY ("id_Компонента")
);

CREATE TABLE IF NOT EXISTS public."Компоненты"
(
    "id_Компонента" serial NOT NULL,
    "Категория" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "Название" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "Описание" text COLLATE pg_catalog."default",
    "Цена" numeric(8, 2) NOT NULL,
    CONSTRAINT "Компоненты_pkey" PRIMARY KEY ("id_Компонента")
);

CREATE TABLE IF NOT EXISTS public."Корпус"
(
    "id_Корпуса" serial NOT NULL,
    "Название" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "Описание" text COLLATE pg_catalog."default" NOT NULL,
    "Цена" numeric(10, 2) NOT NULL,
    CONSTRAINT "Корпус_pkey" PRIMARY KEY ("id_Корпуса"),
    CONSTRAINT "Корпус_Название_key" UNIQUE ("Название")
);

CREATE TABLE IF NOT EXISTS public."Корпус_Размеры"
(
    "id_Корпуса" integer NOT NULL,
    "id_Размера" integer NOT NULL,
    CONSTRAINT "Корпус_Размеры_pkey" PRIMARY KEY ("id_Корпуса", "id_Размера")
);

CREATE TABLE IF NOT EXISTS public."Материнские_платы"
(
    "id_Компонента" integer NOT NULL,
    "Сокет" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "Размер" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Материнские_платы_pkey" PRIMARY KEY ("id_Компонента")
);

CREATE TABLE IF NOT EXISTS public."Оперативная_память"
(
    "id_Оперативной_памяти" integer NOT NULL DEFAULT nextval('"Оперативная_пам_id_Оперативной_п_seq"'::regclass),
    "Название" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "Описание" text COLLATE pg_catalog."default" NOT NULL,
    "Цена" numeric(10, 2) NOT NULL,
    CONSTRAINT "Оперативная_память_pkey" PRIMARY KEY ("id_Оперативной_памяти"),
    CONSTRAINT "Оперативная_память_Название_key" UNIQUE ("Название")
);

CREATE TABLE IF NOT EXISTS public."Оперативная_память_Типы"
(
    "id_Оперативной_памяти" integer NOT NULL,
    "id_Типа_памяти" integer NOT NULL,
    CONSTRAINT "Оперативная_память_Типы_pkey" PRIMARY KEY ("id_Оперативной_памяти", "id_Типа_памяти")
);

CREATE TABLE IF NOT EXISTS public."Пользователи"
(
    "id_Пользователя" serial NOT NULL,
    "Никнейм" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "Пароль" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "Дата_регистрации" date,
    CONSTRAINT "Пользователи_pkey" PRIMARY KEY ("id_Пользователя"),
    CONSTRAINT "Пользователи_Никнейм_key" UNIQUE ("Никнейм")
);

CREATE TABLE IF NOT EXISTS public."Процессоры"
(
    "id_Компонента" integer NOT NULL,
    "Сокет" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "Частота" numeric(5, 2) NOT NULL,
    CONSTRAINT "Процессоры_pkey" PRIMARY KEY ("id_Компонента")
);

CREATE TABLE IF NOT EXISTS public."Размеры"
(
    "id_Размера" serial NOT NULL,
    "Размер" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Размеры_pkey" PRIMARY KEY ("id_Размера"),
    CONSTRAINT "Размеры_Размер_key" UNIQUE ("Размер")
);

CREATE TABLE IF NOT EXISTS public."Сборка_Компоненты"
(
    "id_сборки" integer NOT NULL,
    "id_компонента" integer NOT NULL,
    CONSTRAINT "Сборка_Компоненты_pkey" PRIMARY KEY ("id_сборки", "id_компонента")
);

CREATE TABLE IF NOT EXISTS public."Сборки"
(
    "id_сборки" serial NOT NULL,
    "Название_сборки" character varying(255) COLLATE pg_catalog."default" NOT NULL,
    "Общая_цена" numeric(10, 2) NOT NULL,
    "id_Пользователя" integer NOT NULL,
    "Статус_сборки" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    "Дата_создания" timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    "Дата_завершения" timestamp without time zone,
    CONSTRAINT "Сборки_pkey" PRIMARY KEY ("id_сборки")
);

CREATE TABLE IF NOT EXISTS public."Типы_памяти"
(
    "id_Типа_памяти" serial NOT NULL,
    "Тип_памяти" character varying(50) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT "Типы_памяти_pkey" PRIMARY KEY ("id_Типа_памяти"),
    CONSTRAINT "Типы_памяти_Тип_памяти_key" UNIQUE ("Тип_памяти")
);

ALTER TABLE IF EXISTS public."Блоки_питания"
    ADD CONSTRAINT "fk_блок_питания" FOREIGN KEY ("id_Компонента")
    REFERENCES public."Компоненты" ("id_Компонента") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "Блоки_питания_pkey"
    ON public."Блоки_питания"("id_Компонента");


ALTER TABLE IF EXISTS public."Видеокарты"
    ADD CONSTRAINT "fk_видеокарта" FOREIGN KEY ("id_Компонента")
    REFERENCES public."Компоненты" ("id_Компонента") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "Видеокарты_pkey"
    ON public."Видеокарты"("id_Компонента");


ALTER TABLE IF EXISTS public."Корпус_Размеры"
    ADD CONSTRAINT "fk_корпус" FOREIGN KEY ("id_Корпуса")
    REFERENCES public."Корпус" ("id_Корпуса") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."Корпус_Размеры"
    ADD CONSTRAINT "fk_размер" FOREIGN KEY ("id_Размера")
    REFERENCES public."Размеры" ("id_Размера") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."Материнские_платы"
    ADD CONSTRAINT "fk_материнская_плата" FOREIGN KEY ("id_Компонента")
    REFERENCES public."Компоненты" ("id_Компонента") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "Материнские_платы_pkey"
    ON public."Материнские_платы"("id_Компонента");


ALTER TABLE IF EXISTS public."Оперативная_память_Типы"
    ADD CONSTRAINT "fk_оперативная_память" FOREIGN KEY ("id_Оперативной_памяти")
    REFERENCES public."Оперативная_память" ("id_Оперативной_памяти") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."Оперативная_память_Типы"
    ADD CONSTRAINT "fk_тип_памяти" FOREIGN KEY ("id_Типа_памяти")
    REFERENCES public."Типы_памяти" ("id_Типа_памяти") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."Процессоры"
    ADD CONSTRAINT "fk_процессор" FOREIGN KEY ("id_Компонента")
    REFERENCES public."Компоненты" ("id_Компонента") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;
CREATE INDEX IF NOT EXISTS "Процессоры_pkey"
    ON public."Процессоры"("id_Компонента");


ALTER TABLE IF EXISTS public."Сборка_Компоненты"
    ADD CONSTRAINT "fk_компонент" FOREIGN KEY ("id_компонента")
    REFERENCES public."Компоненты" ("id_Компонента") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."Сборка_Компоненты"
    ADD CONSTRAINT "fk_сборка" FOREIGN KEY ("id_сборки")
    REFERENCES public."Сборки" ("id_сборки") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public."Сборки"
    ADD CONSTRAINT "fk_пользователь" FOREIGN KEY ("id_Пользователя")
    REFERENCES public."Пользователи" ("id_Пользователя") MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE CASCADE;

END;